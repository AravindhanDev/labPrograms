{"version":3,"sources":["components/SumOfArrayOfInt.jsx","components/LeapYearOrNot.jsx","components/Loop.jsx","components/ArithmeticOperation.jsx","components/TemperatureConverter.jsx","components/ReverseANumber.jsx","components/PalindromeOrNot.jsx","components/UpperCaseOrNot.jsx","components/ChangeBg.jsx","components/MobileNoValid.jsx","components/App.jsx","index.js"],"names":["SumOfArrayOfInt","numbers","result","reduce","accumulator","currentValue","className","LeapYearOrNot","Loop","i","ArithmeticOperation","useState","inp1","setInp1","inp2","setInp2","setResult","type","id","value","onChange","e","target","onClick","TemperatureConverter","temp","setTemp","ReverseANumber","parseFloat","toString","split","reverse","join","console","log","PalindromeOrNot","str","reverseStr","toLowerCase","UpperCaseOrNot","check","charAt","toUpperCase","ChangeBg","dark","setDark","darkStyle","backgroundColor","color","lightStyle","style","prevDark","class","MobileNoValid","inputValue","setInputValue","wrong","setWrong","borderColor","txtMobId","test","alert","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df445834.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SumOfArrayOfInt = () => {\r\n\tconst numbers = [12, 23, 34, 45, 56];\r\n\r\n\tconst result = numbers.reduce(\r\n\t\t(accumulator, currentValue) => accumulator + currentValue\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"sumofarr card text-center\">\r\n\t\t\t<h1>sum of array of integers</h1>\r\n\t\t\t<code>Input: {`[${numbers}]`}</code>\r\n\t\t\t<code>Output: {result}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SumOfArrayOfInt;\r\n","import React from \"react\";\r\n\r\nconst LeapYearOrNot = () => {\r\n\tlet year = 2012;\r\n\tlet result = \"\";\r\n\tif (year % 4 === 0) {\r\n\t\tresult = `${year} is Leap Year`;\r\n\t} else {\r\n\t\tresult = `${year} is not Leap Year`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"leapyear card text-center \">\r\n\t\t\t<h1>whether it is leap year or not</h1>\r\n\t\t\t<code>Input: {year}</code>\r\n\t\t\t<code>Output: {result}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LeapYearOrNot;\r\n","import React from \"react\";\r\n\r\nconst Loop = () => {\r\n\tlet result = \"\";\r\n\r\n\tfor (var i = 0; i < 16; i++) {\r\n\t\tif (i % 2 === 0) {\r\n\t\t\tresult = \"even\";\r\n\t\t} else {\r\n\t\t\tresult = \"odd\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"loop card text-center\">\r\n\t\t\t<h1>Iterate from 0 to 15 using, check number is even or odd</h1>\r\n\t\t\t<code>Input: {i - 1}</code>\r\n\t\t\t<code>Output: {result}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loop;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ArithmeticOperation = () => {\r\n\tconst [inp1, setInp1] = useState(\"\");\r\n\tconst [inp2, setInp2] = useState(\"\");\r\n\tconst [result, setResult] = useState(\"\");\r\n\r\n\tfunction handleChange1(e) {\r\n\t\tsetInp1(e.target.value);\r\n\t}\r\n\r\n\tfunction handleChange2(e) {\r\n\t\tsetInp2(e.target.value);\r\n\t}\r\n\r\n\tfunction handleClickMultiply() {\r\n\t\tsetResult(inp1 * inp2);\r\n\t\tsetInp1(\"\");\r\n\t\tsetInp2(\"\");\r\n\t}\r\n\r\n\tfunction hanldeClickDivide() {\r\n\t\tsetResult(inp1 / inp2);\r\n\t\tsetInp1(\"\");\r\n\t\tsetInp2(\"\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"arithmetic card text-center\">\r\n\t\t\t<h1>Calculate multiplication and division</h1>\r\n\t\t\t<input type=\"number\" id=\"inp1\" value={inp1} onChange={handleChange1} />\r\n\t\t\t<input type=\"number\" id=\"inp2\" value={inp2} onChange={handleChange2} />\r\n\t\t\t<div className=\"btn\">\r\n\t\t\t\t<input type=\"button\" value=\"Multiply\" onClick={handleClickMultiply} />\r\n\t\t\t\t<input type=\"button\" value=\"Division\" onClick={hanldeClickDivide} />\r\n\t\t\t</div>\r\n\t\t\t<code id=\"result\">{result}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ArithmeticOperation;\r\n","import React, { useState } from \"react\";\r\n\r\nconst TemperatureConverter = () => {\r\n\tconst [temp, setTemp] = useState(\"\");\r\n\tconst [result, setResult] = useState(\"\");\r\n\r\n\tfunction handleChange(e) {\r\n\t\tsetTemp(e.target.value);\r\n\t}\r\n\r\n\tfunction convertFtoC() {\r\n\t\tlet res = ((temp - 32) * 5) / 9 + \" F\";\r\n\t\tsetResult(res);\r\n\t\tsetTemp(\"\");\r\n\t}\r\n\r\n\tfunction convertCtoF() {\r\n\t\tlet res = (temp * 9) / 5 + 32 + \" C\";\r\n\t\tsetResult(res);\r\n\t\tsetTemp(\"\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"temperature card text-center\">\r\n\t\t\t<h1>Temperature - Celsius Fahrenheit</h1>\r\n\t\t\t<input type=\"number\" value={temp} onChange={handleChange} />\r\n\t\t\t<div className=\"btn\">\r\n\t\t\t\t<input type=\"button\" value=\"Fahrenheit\" onClick={convertFtoC} />\r\n\t\t\t\t<input type=\"button\" value=\"Celsius\" onClick={convertCtoF} />\r\n\t\t\t</div>\r\n\t\t\t<code id=\"result\">{result}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TemperatureConverter;\r\n","import React from \"react\";\r\n\r\nconst ReverseANumber = () => {\r\n\tlet number = 123456789;\r\n\r\n\tlet value = parseFloat(number.toString().split(\"\").reverse().join(\"\"));\r\n\r\n\tconsole.log(value);\r\n\r\n\treturn (\r\n\t\t<div className=\"reverse card text-center\">\r\n\t\t\t<h1>Reverse a number</h1>\r\n\t\t\t<code>Original: {number}</code>\r\n\t\t\t<code>Reversed: {value}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ReverseANumber;\r\n","import React from \"react\";\r\n\r\nconst PalindromeOrNot = () => {\r\n\tlet str = \"malayalam\";\r\n\r\n\tlet reverseStr = str.toLowerCase().split(\"\").reverse().join(\"\");\r\n\r\n\treturn (\r\n\t\t<div className=\"palindrome card text-center\">\r\n\t\t\t<h1>String is palindrome or not</h1>\r\n\t\t\t<code>String: {str}</code>\r\n\t\t\t<code>reversed_String: {reverseStr}</code>\r\n\t\t\t<code>{str === reverseStr ? \"Is Palindrome\" : \"Not a Palindrome\"}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PalindromeOrNot;\r\n","import React from \"react\";\r\n\r\nconst UpperCaseOrNot = () => {\r\n\tlet str = \"VisualStudioCode\";\r\n\tlet check = str.charAt(0);\r\n\tlet result;\r\n\tif (check === check.toUpperCase()) {\r\n\t\tresult = \"Is UpperCase\";\r\n\t} else {\r\n\t\tresult = \"Not UpperCase\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"uppercase card text-center\">\r\n\t\t\t<h1>First Charecter of String is uppercase or not</h1>\r\n\t\t\t<code>{str}</code>\r\n\t\t\t<code>{result}</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UpperCaseOrNot;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ChangeBg = () => {\r\n\tconst [dark, setDark] = useState(false);\r\n\r\n\tconst darkStyle = {\r\n\t\tbackgroundColor: \"#222\",\r\n\t\tcolor: \"#eee\",\r\n\t};\r\n\r\n\tconst lightStyle = {\r\n\t\tbackgroundColor: \"#eee\",\r\n\t\tcolor: \"#222\",\r\n\t};\r\n\r\n\tfunction handleClick() {\r\n\t\tsetDark((prevDark) => !prevDark);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"bg card text-center\" style={dark ? darkStyle : lightStyle}>\r\n\t\t\t<h1>To Change Background-Color</h1>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"theme\"\r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t\tstyle={dark ? darkStyle : lightStyle}\r\n\t\t\t>\r\n\t\t\t\t{dark ? <i class=\"fas fa-sun\"></i> : <i class=\"fas fa-moon\"></i>}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChangeBg;\r\n","import React, { useState } from \"react\";\r\n\r\nconst MobileNoValid = () => {\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\tconst [wrong, setWrong] = useState(false);\r\n\r\n\tfunction handleChange(e) {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst wrongStyle = {\r\n\t\tborderColor: \"#c00\",\r\n\t\tcolor: \"#c00\",\r\n\t};\r\n\r\n\tconst rightStyle = {\r\n\t\tborderColor: \"#000\",\r\n\t\tcolor: \"#000\",\r\n\t};\r\n\r\n\tfunction IsMobileNumber(txtMobId) {\r\n\t\tvar mob = /^[1-9]{1}[0-9]{9}$/;\r\n\t\tif (mob.test(inputValue) === false) {\r\n\t\t\tsetWrong(true);\r\n\t\t\talert(\"Please enter valid mobile number\");\r\n\t\t} else {\r\n\t\t\tsetWrong(false);\r\n\t\t\talert(\"Valid mobile number\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"mobile card text-center\">\r\n\t\t\t<h1>Number is mobile no or not</h1>\r\n\t\t\t<input\r\n\t\t\t\tid=\"tel\"\r\n\t\t\t\ttype=\"tel\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tstyle={wrong ? wrongStyle : rightStyle}\r\n\t\t\t/>\r\n\t\t\t<button id=\"check\" onClick={IsMobileNumber}>\r\n\t\t\t\tcheck\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MobileNoValid;\r\n","import React from \"react\";\nimport SumOfArrayOfInt from \"./SumOfArrayOfInt\";\nimport LeapYearOrNot from \"./LeapYearOrNot\";\nimport Loop from \"./Loop\";\nimport ArithmeticOperation from \"./ArithmeticOperation\";\nimport TemperatureConverter from \"./TemperatureConverter\";\nimport ReverseANumber from \"./ReverseANumber\";\nimport PalindromeOrNot from \"./PalindromeOrNot\";\nimport UpperCaseOrNot from \"./UpperCaseOrNot\";\nimport ChangeBg from \"./ChangeBg\";\nimport MobileNoValid from \"./MobileNoValid\";\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<header>Lap Programs</header>\n\t\t\t<SumOfArrayOfInt />\n\t\t\t<LeapYearOrNot />\n\t\t\t<Loop />\n\t\t\t<ArithmeticOperation />\n\t\t\t<TemperatureConverter />\n\t\t\t<ReverseANumber />\n\t\t\t<PalindromeOrNot />\n\t\t\t<UpperCaseOrNot />\n\t\t\t<ChangeBg />\n\t\t\t<MobileNoValid />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}